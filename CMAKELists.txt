cmake_minimum_required(VERSION 3.10)
project(notifier VERSION 1.0 DESCRIPTION "Lightweight Notifier Application" LANGUAGES CXX)

# Specify C++ Standard
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Enable vcpkg integration
if(DEFINED ENV{VCPKG_ROOT})
    set(CMAKE_TOOLCHAIN_FILE "$ENV{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake" CACHE STRING "Vcpkg toolchain file")
endif()

# Source and Header Files
set(SRC_FILES
    src/main.cpp
    src/notificationManager.cpp
    src/session.cpp
    src/windows_api.cpp
    src/notification.cpp
    src/shortcut_util.cpp 
    src/websocketServer.cpp
)
set(HEADER_FILES
    include/notificationManager.h
    include/session.h
    include/windows_api.h
    include/notification.h
    include/shortcut_util.h
    include/websocketServer.h
  "include/terminalUI.h")

# Add Executable Target
add_executable(notifier ${SRC_FILES} ${HEADER_FILES})

# Include Directories
target_include_directories(notifier PRIVATE include)

# Find and link uWebSockets
find_package(unofficial-uwebsockets CONFIG REQUIRED)
find_package(nlohmann_json CONFIG REQUIRED)
target_link_libraries(notifier PRIVATE WindowsApp.lib winmm unofficial::uwebsockets::uwebsockets PRIVATE nlohmann_json::nlohmann_json)

# Windows Runtime Support
target_compile_options(notifier PRIVATE /await)

if(MSVC)
    set(CMAKE_CXX_FLAGS "/W4 /std:c++20 /EHsc")
endif()


# Set Output Directory for Binary
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)